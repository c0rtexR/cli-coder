name: üß™ Test Suite

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'package*.json'
      - 'tsconfig.json'
      - 'vitest.config.ts'
      - 'eslint.config.js'
      - '.github/workflows/**'
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20'
  CACHE_VERSION: 'v1'

jobs:
  # üîç Code Quality Checks
  lint-and-typecheck:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üîç Run ESLint
        run: npm run lint

      - name: üîß Run TypeScript type checking
        run: npm run type-check

  # üß™ Unit Tests
  unit-tests:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üß™ Run unit tests
        run: npm run test:unit

      - name: üìä Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unit-tests
          name: unit-tests-coverage

  # üîó Integration Tests
  integration-tests:
    name: üîó Integration Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üîó Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test

  # üé≠ End-to-End Tests
  e2e-tests:
    name: üé≠ E2E Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üé≠ Run E2E tests
        run: npm run test:e2e

  # üåç Real Environment Tests
  real-tests:
    name: üåç Real Environment Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    # Only run on main branch or when explicitly triggered
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üåç Run real environment tests
        run: npm run test:real
        env:
          # Add any required environment variables for real tests
          TEST_ENV: 'github-actions'

  # ‚úÖ Node Version Compatibility (Linux only)
  node-compatibility:
    name: üß™ Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests]
    strategy:
      fail-fast: false
      matrix:
        node-version: ['22'] # Test latest LTS only (Node 18 not compatible with dependencies)

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üì¶ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üß™ Run essential tests
        run: npm run test:ci # Unit + Integration tests only

  # üìä Test Summary
  test-summary:
    name: üìä Test Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, node-compatibility]
    if: always()
    steps:
      - name: üìä Summary
        run: |
          echo "## üß™ Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| üß™ Unit Tests | ${{ needs.unit-tests.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| üîó Integration Tests | ${{ needs.integration-tests.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY  
          echo "| üé≠ E2E Tests | ${{ needs.e2e-tests.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| üß™ Node Compatibility | ${{ needs.node-compatibility.result == 'success' && '‚úÖ Passed' || '‚ùå Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.unit-tests.result }}" == "success" && \
                "${{ needs.integration-tests.result }}" == "success" && \
                "${{ needs.e2e-tests.result }}" == "success" && \
                "${{ needs.node-compatibility.result }}" == "success" ]]; then
            echo "üéâ **All tests passed!** This PR is ready for review." >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå **Some tests failed.** Please check the failing jobs above." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

# üõ°Ô∏è Security and Performance
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true