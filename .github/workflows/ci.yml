name: 🔄 Continuous Integration

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  schedule:
    # Run tests daily at 6 AM UTC to catch dependency issues
    - cron: '0 6 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # 🧪 Comprehensive Test Suite
  comprehensive-tests:
    name: 🧪 Full Test Coverage
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Lint and type check
        run: |
          npm run lint
          npm run type-check

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧪 Run all test suites
        run: npm run test:all

      - name: 📊 Generate coverage report
        run: npm run test:unit -- --coverage
        if: always()

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: comprehensive
          name: comprehensive-coverage

  # 🌍 Multi-Platform Testing
  platform-tests:
    name: 🌍 ${{ matrix.os }} - Node ${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: ['18', '20', '22']

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build and test
        run: |
          npm run build
          npm run test:ci

  # 🏷️ Release Testing (only on tags)
  release-tests:
    name: 🏷️ Release Validation
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [comprehensive-tests, platform-tests]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for release
        run: npm run build

      - name: 🧪 Full test suite
        run: npm run test:all

      - name: 📦 Test package
        run: npm pack

      - name: ✅ Release ready
        run: |
          echo "## 🎉 Release ${{ github.ref_name }} Ready!" >> $GITHUB_STEP_SUMMARY
          echo "All tests passed for release ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

  # 🚨 Nightly Dependency Check
  dependency-check:
    name: 🚨 Dependency Security
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Security audit
        run: npm audit --audit-level=moderate

      - name: 📦 Check for outdated packages
        run: npm outdated || true

      - name: 🧪 Test with latest dependencies
        run: |
          npm update
          npm run test:ci

# 🛡️ Security and cleanup
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false # Don't cancel main branch builds